plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.netflix.dgs.codegen' version '6.0.3'
    id 'org.graalvm.buildtools.native' version '0.9.28'
    id 'dev.hilla' version '2.5.5'
    id 'com.vaadin' version '24.3.10'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('hillaVersion', "2.5.5")
    set('springModulithVersion', "1.1.4")
    set('vaadinVersion', "24.3.10")
    springCloudVersion = "2023.0.1"
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
//    implementation 'io.springfox:springfox-boot-starter:3.0.0'
//    implementation 'io.springfox:springfox-swagger2:2.9.2'
//    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
}

dependencyManagement {
    imports {
        mavenBom "dev.hilla:hilla-bom:${hillaVersion}"
        mavenBom "org.springframework.modulith:spring-modulith-bom:${springModulithVersion}"
        mavenBom "com.vaadin:vaadin-bom:${vaadinVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

generateJava {
    schemaPaths = ["${projectDir}/src/main/resources/graphql-client"]
    packageName = 'org.example.urface.codegen'
    generateClient = true
}

